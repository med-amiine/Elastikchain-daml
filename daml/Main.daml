module Main where

-- Expected workflow :
--  operator(Elastik)-->InviteParticipant/InviteClient / AddParticipantToProject / InviteJudge / JudgeCriteria
--  participant-->AcceptParticipantRequest / AddEditProfile / *AddEditsubmission / *CreateTeam / *JoinTeam / 
--  client--> CreateProject / CreatChallenge / AddEditProfile / AddJudgeToProject
--  judgs -->  *VoteForProject(SpecifyRating) 

-- anybody can be an operator ?? specify only one operator
-- participant should not be invited multiple times !!
-- shoud not have two profiles ol

-- import Daml.Script
-- import DA.Date

data Challenge = Challenge
  with
    name: Text 
    prize: Text 
  deriving(Eq, Show)

-- invite all parties
template Platform 
  with 
    operator: Party 
  where
    signatory operator

    controller operator can
      nonconsuming InviteClient: ContractId ClientInvitation
        with 
          client: Party 
        do create ClientInvitation with ..

    controller operator can
      nonconsuming InviteParticipant: ContractId ParticipantInvitation
        with 
          participant: Party 
        do create ParticipantInvitation with ..

    controller operator can
      nonconsuming InviteJudge: ContractId JudgeInvitation
        with 
          judge: Party 
        do create JudgeInvitation with .. 

--  ----------------------------------------------------------------

-- Judge invitation
template JudgeInvitation
  with
    judge: Party 
    operator: Party
  where 
    signatory operator 

    controller judge can 
      AcceptjudgeRequest: ContractId JudgeRole
        do create JudgeRole with ..

template JudgeRole
  with 
    judge: Party 
    operator: Party 
  where 
    signatory judge, operator 

    controller judge can 
      nonconsuming JudgeForProject: ContractId RequestToJudgeProject
        with 
          projectId: Text 
          client: Party
        do create RequestToJudgeProject with ..

template RequestToJudgeProject
  with 
    judge: Party 
    client: Party
    operator: Party 
    projectId: Text
  where 
    signatory judge 

    controller judge can 
      AddJudgeToProject: ContractId ClientProject 
        do 
          exerciseByKey @ClientProject (client, projectId) AddJudge with judge

--  ----------------------------------------------------------------

-- Participant invitation
template ParticipantInvitation
  with
    participant: Party 
    operator: Party
  where 
    signatory operator 

    controller participant can 
      AcceptParticipantRequest: ContractId ParticipantRole
        do create ParticipantRole with ..

template ParticipantRole
  with 
    participant: Party 
    operator: Party 
  where 
    signatory participant, operator 

    controller participant can 
      AddParProfile: ContractId ParticipantProfile
        with
          first:Text
          last:Text
          email:Text
        do
          create ParticipantProfile with ..

    controller participant can 
      nonconsuming RegisterForProject: ContractId RequestToJoinProject
        with 
          projectId: Text 
          client: Party
        do create RequestToJoinProject with ..

template RequestToJoinProject
  with 
    participant: Party 
    client: Party
    operator: Party 
    projectId: Text
  where 
    signatory participant 

    controller operator can 
      AddParticipantToProject: ContractId ClientProject 
        do 
          exerciseByKey @ClientProject (client, projectId) AddParticipant with participant

--  ----------------------------------------------------------------

-- client invitation
template ClientInvitation
  with
    client: Party 
    operator: Party
  where 
    signatory operator 

    controller client can 
      AcceptRequest: ContractId ClientRole
        do create ClientRole with ..

template ClientRole
  with 
    client: Party 
    operator: Party 
  where 
    signatory client, operator 
    
    controller client can 
      nonconsuming AddEditCliProfile: ContractId ClientProfile
        with
          first:Text
          last:Text
          email:Text
        do
          create ClientProfile with ..

    controller client can 
      nonconsuming CreateProject: ContractId ClientProject 
        with 
          name: Text 
          projectId: Text
        do 
          create ClientProject with operator, client, projectId, name, desc = "", criteria = "", challenges = [], participants = [], judges = []

--  ----------------------------------------------------------------

-- create a hackathon
template ClientProject
  with 
    client: Party 
    operator: Party 
    projectId: Text
    name: Text 
    desc:  Text
    criteria: Text
    challenges: [Challenge]
    participants: [Party]
    judges: [Party]
  where
    signatory client 
    observer participants
    observer judges
    
    key (client,projectId): (Party, Text)
    maintainer key._1

    controller client can 
       AddUpdateDescription: ContractId ClientProject 
        with 
          newDesc: Text 
        do create this with client, name, desc= newDesc, challenges

    controller client can 
       AddUpdateCriteria: ContractId ClientProject 
        with 
          newCriteria: Text 
        do create this with client, name,desc, criteria= newCriteria, challenges

    controller client can 
       AddUpdateChallenge: ContractId ClientProject 
        with 
          challenge: Challenge 
        do create this with client, name, desc,criteria, challenges = challenge::challenges
    
    controller operator can 
       AddParticipant: ContractId ClientProject 
        with 
          participant: Party 
        do create this with operator, client, name, desc, criteria, challenges, participants = participant::participants

    controller client can 
       AddJudge: ContractId ClientProject 
        with 
          judge: Party 
        do create this with operator, client, name, desc, criteria, challenges, judges = judge::judges


-- client / participant profile

template ClientProfile
  with 
    client: Party 
    first: Text 
    last:  Text
    email: Text
  where 
    signatory client



template ParticipantProfile
  with 
    participant: Party 
    first: Text 
    last:  Text
    email: Text
  where 
    signatory participant
