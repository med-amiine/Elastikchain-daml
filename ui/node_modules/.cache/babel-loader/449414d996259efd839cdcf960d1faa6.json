{"ast":null,"code":"import _slicedToArray from\"/Users/midmoussi/Documents/smart_port/daml-ui-template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{createToken,dablLoginUrl,damlPartyKey,damlTokenKey}from\"../config\";var UserStateContext=React.createContext({isAuthenticated:false});var UserDispatchContext=React.createContext({});function userReducer(state,action){switch(action.type){case\"LOGIN_SUCCESS\":return{isAuthenticated:true,token:action.token,party:action.party};case\"LOGIN_FAILURE\":return{isAuthenticated:false};case\"SIGN_OUT_SUCCESS\":return{isAuthenticated:false};}}var UserProvider=function UserProvider(_ref){var children=_ref.children;var party=localStorage.getItem(damlPartyKey);var token=localStorage.getItem(damlTokenKey);var initState=!!party&&!!token?{isAuthenticated:true,token:token,party:party}:{isAuthenticated:false};var _React$useReducer=React.useReducer(userReducer,initState),_React$useReducer2=_slicedToArray(_React$useReducer,2),state=_React$useReducer2[0],dispatch=_React$useReducer2[1];return/*#__PURE__*/React.createElement(UserStateContext.Provider,{value:state},/*#__PURE__*/React.createElement(UserDispatchContext.Provider,{value:dispatch},children));};function useUserState(){var context=React.useContext(UserStateContext);if(context===undefined){throw new Error(\"useUserState must be used within a UserProvider\");}return context;}function useUserDispatch(){var context=React.useContext(UserDispatchContext);if(context===undefined){throw new Error(\"useUserDispatch must be used within a UserProvider\");}return context;}// ###########################################################\nfunction loginUser(dispatch,party,userToken,history,setIsLoading,setError){setError(false);setIsLoading(true);if(!!party){var token=userToken||createToken(party);localStorage.setItem(damlPartyKey,party);localStorage.setItem(damlTokenKey,token);dispatch({type:\"LOGIN_SUCCESS\",token:token,party:party});setError(false);setIsLoading(false);history.push(\"/app\");}else{dispatch({type:\"LOGIN_FAILURE\"});setError(true);setIsLoading(false);}}var loginDablUser=function loginDablUser(){window.location.assign(\"https://\".concat(dablLoginUrl));};function signOut(dispatch,history){localStorage.removeItem(\"daml.party\");localStorage.removeItem(\"daml.token\");dispatch({type:\"SIGN_OUT_SUCCESS\"});history.push(\"/login\");}export{UserProvider,useUserState,useUserDispatch,loginUser,loginDablUser,signOut};","map":{"version":3,"sources":["/Users/midmoussi/Documents/smart_port/daml-ui-template/ui/src/context/UserContext.tsx"],"names":["React","createToken","dablLoginUrl","damlPartyKey","damlTokenKey","UserStateContext","createContext","isAuthenticated","UserDispatchContext","userReducer","state","action","type","token","party","UserProvider","children","localStorage","getItem","initState","useReducer","dispatch","useUserState","context","useContext","undefined","Error","useUserDispatch","loginUser","userToken","history","setIsLoading","setError","setItem","push","loginDablUser","window","location","assign","signOut","removeItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { History } from 'history';\nimport { createToken, dablLoginUrl, damlPartyKey, damlTokenKey } from \"../config\";\n\ntype AuthenticatedUser = {\n  isAuthenticated : true\n  token : string\n  party : string\n}\n\ntype UnAthenticated = {\n  isAuthenticated : false\n}\n\ntype UserState = UnAthenticated | AuthenticatedUser\n\ntype LoginSuccess = {\n  type : \"LOGIN_SUCCESS\"\n  token : string\n  party : string\n}\n\ntype LoginFailure = {\n  type : \"LOGIN_FAILURE\"\n}\n\ntype SignoutSuccess = {\n  type : \"SIGN_OUT_SUCCESS\"\n}\n\ntype LoginAction = LoginSuccess | LoginFailure | SignoutSuccess\n\nconst UserStateContext = React.createContext<UserState>({ isAuthenticated: false });\nconst UserDispatchContext = React.createContext<React.Dispatch<LoginAction>>({} as React.Dispatch<LoginAction>);\n\nfunction userReducer(state : UserState, action : LoginAction) : UserState {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return { isAuthenticated: true, token: action.token, party: action.party };\n    case \"LOGIN_FAILURE\":\n      return { isAuthenticated: false };\n    case \"SIGN_OUT_SUCCESS\":\n      return { isAuthenticated: false };\n  }\n}\n\nconst UserProvider : React.FC = ({ children }) => {\n  const party = localStorage.getItem(damlPartyKey);\n  const token = localStorage.getItem(damlTokenKey);\n\n  let initState : UserState = (!!party && !!token) ? { isAuthenticated : true, token, party } : { isAuthenticated : false };\n  const [state, dispatch] = React.useReducer<React.Reducer<UserState,LoginAction>>(userReducer, initState);\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  const context = React.useContext<UserState>(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  const context = React.useContext<React.Dispatch<LoginAction>>(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\n\n// ###########################################################\n\nfunction loginUser(\n    dispatch : React.Dispatch<LoginAction>,\n    party : string,\n    userToken : string,\n    history : History,\n    setIsLoading : React.Dispatch<React.SetStateAction<boolean>>,\n    setError : React.Dispatch<React.SetStateAction<boolean>>) {\n  setError(false);\n  setIsLoading(true);\n\n  if (!!party) {\n    const token = userToken || createToken(party)\n    localStorage.setItem(damlPartyKey, party);\n    localStorage.setItem(damlTokenKey, token);\n\n    dispatch({ type: \"LOGIN_SUCCESS\", token, party });\n    setError(false);\n    setIsLoading(false);\n    history.push(\"/app\");\n  } else {\n    dispatch({ type: \"LOGIN_FAILURE\" });\n    setError(true);\n    setIsLoading(false);\n  }\n}\n\nconst loginDablUser = () => {\n  window.location.assign(`https://${dablLoginUrl}`);\n}\n\nfunction signOut(dispatch : React.Dispatch<LoginAction>, history : History) {\n  localStorage.removeItem(\"daml.party\");\n  localStorage.removeItem(\"daml.token\");\n\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n  history.push(\"/login\");\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, loginDablUser, signOut };\n"]},"metadata":{},"sourceType":"module"}